# to do
--Time out if no response from comport (MCR not connected to that com port)

# revision history
    v.3.2.2 250811 bug: (same as 3.1.4) reverted to hard coded version rather than reading from pyproject.toml 
    v.3.2.1 250811 Changed motor move waitTime slop from 5% to 15%
v.3.2.0 250728 Added verify communications function to MCRCom class in order to reinitialize the com port 
                Added a function to check and re-establish communication with the board 
    v.3.1.5 250423 bug: changed iris initial home speed (motor:iris:home)
    v.3.1.4 250422 bug: reverted to hard coded revision in the file. 
    v.3.1.3 250422 bug: read revision from pyproject.toml file when .exe is created
    v.3.1.2 250421 read revision from pyproject.toml file rather than setting manually in the module. 
    v.3.1.1 250414 removed depricated typing module.  Python >3.10 required.  
v.3.1.0 250320 Log files are appended, not deleted after each restart
                IRC state moved to motor class 
                MCRControl class variables moved to instance variables to allow multiple boards to be controlled
                Abandoned MCRInitRequired decorator function due to incomprehensible logic preventing correct working. 
                Removed DCMotorType parameter from motor class init()
                Removed 'OK' returns, replaced with 'err.ERR_OK' with same numerical value = 0
                added unhandled exception logging
                added Linux support for serial port selection
v.3.0.0 250311 Added log files with function tracking (debug level)
                Allowed log files to be created in user's directories for Windows and Linux OS
                moved motor specific functions to motor class (MCRReadMotorSetup, MCRWriteMotorSetup, and internal functions).  Change MCR.MCRControl.MCRReadMotorSetup() to MCR.focus.readMotorSetup(), etc. 
                Depricated functions for backward compatibility. 
                Created a separate MCRCom class for board communication using only one instance for the entire program.   
                updated instance variables (self.focus, etc) to class variables (MCRControl.focus, etc) since each controller has only one of each motor type. 
                updated MCRControl.close() function to release resources. 
                bug (MCRCom._sendCmd): added successful return value when changing protocol between USB, UART, I2C. 
                
v.2.5.0 250304 Added MCRInitRequired check for functions
    v.2.4.2 250212 MCRRegardLimits(): check for a valid getCmd() response before creating the setCmd() parameter
    v.2.4.1 250117 (line 575) updated SN for >055-009999
v.2.4.0 241220 increased PI home overshoot to >100 steps to reduce zoom motor reversing
                added slow approach to PI home location 
                added searchComPorts() to examples
    v.2.3.5 241203 (__init__) Stopped initialization if comport open was not successful
    v.2.3.4 241011 created logging handler
    v.2.3.3 241001 fixed SN return formatting in readBoardSN()
v.2.3.0~2 240725 added MCRWriteMotorSetup and MCRReadMotorSetup commands (written by aseligmann) starting at line 606
                changed com port to work with Linux (written by aseligmann) by changing the return value in new line 84
                changed MCR_MOVE_REST_TIME = 0.01 from longer 0.05s
    v.2.2.1 240326 added rest time between moves (backlash and homeing) to reduce motor reversal
v.2.2.0 240318 changed (home) function to be sure motor is not past the PI position.  Added a step-back amount in case the current step is past the PI position.  
                move to home position at fast speed (max(user speed, 1200pps))
                changed backlash compensation when moving past PI location or min/max steps (moveRel)
    v.2.1.10-11 240201 fixed IRC state for consistency.  Changed in/out to (1|2) to match spec sheet
    v.2.1.9 240131 bug: chnaged IRCInit(), no longer creates a motor instance becuase it isn't requried for IRC. 
                IRCState() returns the new state rather than just returning 0 for everything
    v.2.1.8 240130 function hint clarification (OK = 0)
    v.2.1.7 240130 bug: Added None initialization for motor classes per Github issue 'IRCInit values #1'
    v.2.1.2-6 240125 bug: fixed MCRInitialized error if not response received from board 
    v.2.1.1 240123 bug: fixed errList import
v.2.1.0 240122 added communication path control (i2c, UART, USB) to board commands
                function hint documentation correction for checkLimits return values
                changed board class name to controllerClass to avoid confusion with MCRboard variable 
    v.2.0.7 240103 function documentation modifications for Python markdown hints 
    v.2.0.6 231110 allowed absolute move to go < 0 in moveAbs
    v.2.0.5 231101 added re-initialization check to __init__
    v.2.0.4 10/16/2023 removed some extra log.info lines that were not useful in production
                        removed unused errors from the errList
    v.2.0.3 10/16/2023 exposed MCRInitialized variable
    v.2.0.1~2 10/16/2023 bug in __init.py__ import statement, and TheiaMCR.errList import statement
v.2.0.0 10/15/2023 changed to classes (MCRControl, board, motor)
                removed debug tracePrint
                created an example use file
    v.1.0.7~8 9/5/2023 modification to upload as a Python package
    v.1.0.6 8/30/2023 modified setup.py for pip uploading
    v.1.0.5 6/26/2023 added speed variable to focusRel, zoomRel, and irisRel
    v.1.0.4 6/26/2023 changed MCRSendCmd to wait for move to be complete before reading response
                    removed resetting of step position on error, choose expected step position instead
                    added correct for backlash to abs movements
    v.1.0.3 6/23/2023 updated waitTime in MCRMove function to prevent premature timeout
    v.1.0.2 6/22/2023 added timeout function in MCRSendCommand
    v.1.0.1 6/22/2023 added log note to MCRinit
v.1.0.0 6/20/2023 initial version